version: '3.8'

services:
  nginx:
    image: ghcr.io/ai-cfia/nginx:0.0.4
    container_name: fertiscan-nginx
    restart: always
    ports:
      - "80:80"
    environment:
      - BACKEND_PORT=5000 # Needs to point to the internal port of the backend service (5000)
      - FRONTEND_PORT=3000 # Needs to point to the internal port of the frontend service (3000)
      - SWAGGER_PATH=swagger # Use anything but '/api' to avoid conflicts with the backend. Make sure to use the same value for API_BASE_PATH in the backend. e.g. 'API_BASE_PATH=/swagger'
    depends_on:
      - frontend
      - backend
    networks:
      - fertiscan-network

  frontend:
    image: ghcr.io/ai-cfia/fertiscan-frontend:304-adapt-alpha-v100-to-fastapi-backend-and-minor-fixes
    container_name: frontend
    restart: always
    ports:
      - "3000:3000" # if you want to run the frontend on a different port, change the first port number
    depends_on:
      - postgres
    networks:
      - fertiscan-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    env_file:
      - .env.secrets
    environment:
    - OTEL_EXPORTER_OTLP_ENDPOINT=http://alloy:4317
    - OTEL_EXPORTER_OTLP_INSECURE=true
    - OTEL_TRACES_EXPORTER=otlp
    - OTEL_METRICS_EXPORTER=otlp
    - OTEL_LOGS_EXPORTER=otlp
    - OTEL_PYTHON_LOG_CORRELATION=true
    - OTEL_TRACES_SAMPLER=always_on
    - OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED=true
    - OTEL_PYTHON_LOGGING_LOG_LEVEL=DEBUG
    - OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_REQUEST=".*"
    - OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_RESPONSE=".*"
    - OTEL_PYTHON_FASTAPI_EXCLUDED_URLS="health"
    - OTEL_SERVICE_NAME="fertiscan-backend"
    - OTEL_RESOURCE_ATTRIBUTES="service.name=fertiscan-backend"
    - OTEL_LOG_LEVEL=DEBUG
    - ALLOWED_ORIGINS=["http://localhost:3000"]
    - PHOENIX_ENDPOINT=http://phoenix:6006/v1/traces
    depends_on:
      - postgres
    ports:
      - "5001:5000" # if you want to run the backend on a different port, change the first port number
    networks:
      - fertiscan-network

  postgres:
    image: ghcr.io/ai-cfia/postgres:0.0.5
    container_name: fertiscan-postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=fertiscan
      - PROJECT_NAME=fertiscan
      - BB_URL=${BB_URL}
      - BB_SERVICE_ACCOUNT=${BB_SERVICE_ACCOUNT}
      - BB_SERVICE_KEY=${BB_SERVICE_KEY}
      - INSTANCE_ID=${BB_INSTANCE_ID}
      - DATABASE_ID=${BB_DATABASE_ID}
    env_file:
      - .env.secrets
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      timeout: 10s
      retries: 5
    networks:
      - fertiscan-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: fertiscan-pgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_LISTEN_PORT=5050
    ports:
      - "5050:5050"
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - fertiscan-network
    depends_on:
      - postgres

  prometheus:
    image: ghcr.io/ai-cfia/prometheus:0.0.2
    container_name: prometheus
    environment:
      - ENABLE_BACKEND_METRICS=false
    ports:
      - "9090:9090"
    networks:
      - fertiscan-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3001:3000"
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=flameGraph traceqlSearch traceQLStreaming correlations metricsSummary traceqlEditor traceToMetrics datatrails
      - GF_INSTALL_PLUGINS=grafana-lokiexplore-app,grafana-exploretraces-app
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    networks:
      - fertiscan-network
    depends_on:
      - prometheus
      - loki
      - tempo

  loki:
    image: ghcr.io/ai-cfia/loki:0.0.1
    container_name: loki
    ports:
      - "3100:3100"
    user: root
    volumes:
      - "loki-data:/data/loki"
    networks:
      - fertiscan-network


  tempo:
    image: ghcr.io/ai-cfia/tempo:0.0.1
    container_name: tempo
    ports:
      - "3200:3200"
      - "4327:4317"
      - "4328:4318"
    networks:
      - fertiscan-network

  alloy:
    image: ghcr.io/ai-cfia/alloy:0.0.1
    container_name: alloy
    ports:
      - "12347:12345"
      - "4317:4317"
      - "4318:4318"
    networks:
      - fertiscan-network

  phoenix:
    container_name: phoenix
    image: arizephoenix/phoenix:latest
    restart: always
    depends_on:
      - phoenix-postgres
    ports:
      - 6006:6006
      - 4343:4317
    environment:
      - PHOENIX_SQL_DATABASE_URL=postgresql://postgres:postgres@phoenix-postgres:5432/postgres
    networks:
      - fertiscan-network

  phoenix-postgres:
    container_name: phoenix-postgres
    image: postgres:17
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5433:5432
    networks:
      - fertiscan-network
    volumes:
      - phoenix-postgres-data:/var/lib/postgresql/data


networks:
  fertiscan-network:
    driver: bridge

volumes:
  postgres-data:
  pgadmin:
  grafana_data:
  loki-data:
  phoenix-postgres-data:
